import {
  AfterViewInit,
  Component,
  ElementRef,
  HostListener,
  OnInit,
  ViewChild,
} from "@angular/core";
import { CommonValues } from "../../services/commonValues";
import { Subscription } from "rxjs";
import { ApiService } from "src/app/services/api.service";
import { AccordionConfig } from "ngx-bootstrap/accordion";
import { BusinessProfileComponent } from "../bussinesspages/business-profile/business-profile.component";
import { BusinessFollowerComponent } from "../bussinesspages/business-follower/business-follower.component";
import { BusinessAdminComponent } from "../bussinesspages/business-admin/business-admin.component";
import { BusinessEmployeeComponent } from "../bussinesspages/business-employee/business-employee.component";
import { BussinessPostComponent } from "../bussiness-post/bussiness-post.component";
import { BusinessEmployeeRequestsComponent } from "../bussinesspages/business-employee-requests/business-employee-requests.component";
import { SearchData } from "src/app/services/searchData";
import { BusinessFollowersRequestComponent } from "../bussinesspages/business-followers-request/business-followers-request.component";
import { BusinessFollowersRequestSentComponent } from "../bussinesspages/business-followers-request-sent/business-followers-request-sent.component";
import { UtilService } from "src/app/services/util.service";

export function getAccordionConfig(): AccordionConfig {
  return Object.assign(new AccordionConfig(), { closeOthers: true });
}

@Component({
  selector: "app-navigation-header",
  templateUrl: "./navigation-header.component.html",
  styleUrls: ["./navigation-header.component.scss"],
  providers: [{ provide: AccordionConfig, useFactory: getAccordionConfig }],
})
export class NavigationHeaderComponent implements OnInit {
  @ViewChild("businessmenusticky", { static: false }) menuElement: ElementRef;

  businessmenustick: boolean = false;

  clickEventsubscription: Subscription; //
  employeeCount: Subscription;
  followerRequesCount: Subscription;

  commondata: any = {};
  active;
  // commondata

  allroles: any = [];
  selectedRole = "13";
  selectedDetails: any = [];
  screenData: any = [];
  serviceData: any = [];
  roleData: any = [];
  rolescreenMap = {};
  groupedMenu = [];
  panelOpenState = false;
  isSuperAdmin: any;
  employeeRequestFlag: boolean = true;
  followerRequestFlag: boolean = true;
  managePageFlag: boolean = true
  values: any = {};
  navigationMenu = [];
  navigationadminMenu = [];
  selectedItem;
  submenuData;
  reqPendinCnt;
  visitorsCnt;
  constructor(
    private commonvalues: CommonValues,
    private businesseEmployeeRequests: BusinessEmployeeRequestsComponent,
    private businesseFollowerRequests: BusinessFollowersRequestComponent,
    private businesseFollowerRequestsSent: BusinessFollowersRequestSentComponent,
    private about: BusinessProfileComponent,
    private follower: BusinessFollowerComponent,
    private people: BussinessPostComponent,
    private searchData: SearchData,
    private api: ApiService,
    private adminadd: BusinessAdminComponent,
    private employee: BusinessEmployeeComponent,
    private util: UtilService
  ) {
    this.clickEventsubscription = this.commonvalues
      .getbusinessid()
      .subscribe((res) => {
        this.commondata = res;
        if(res.menu == "requestsReceived"){
          this.employeeRequestFlag = false
        }
      });

    // this.employeeCount = this.searchData
    //   .getRequestedEmploeeCount()
    //   .subscribe((res) => {
    //       this.reqPendinCnt = res;
    //   });

    this.followerRequesCount = this.searchData
      .getVisitorsCount()
      .subscribe((res) => {
        this.visitorsCnt = res;
      });
  }
  // ngAfterViewInit(): void {
  //   throw new Error('Method not implemented.');
  // }

  ngOnInit() {
    this.isSuperAdmin = localStorage.getItem("isSuperAdmin");
    //  this.reqPendinCnt = localStorage.getItem("reqPendinCnt");
     this.apicall();
  }

  @HostListener("window:scroll")
  handleScroll() {
    const windowScroll = window.pageYOffset;
    if (windowScroll >= 360) {
      this.businessmenustick = true;
    } else {
      this.businessmenustick = false;
    }
  }

  // displaymenu(){

  //      var screen =  localStorage.getItem('screen')

  //      var adminviewflag= localStorage.getItem('adminviewflag')
  //      this.navidationData.forEach(element => {

  //       if( element.page==screen){
  //         if(adminviewflag!=undefined||adminviewflag!=null||adminviewflag!=''){
  //          if(adminviewflag==element.admin){
  //             this.navigationMenu.push(element)

  //            }
  //         }else{
  //           this.navigationMenu.push(element)

  //         }

  //       }

  //     });
  //     this.commondata.navigationMenu=this.navigationMenu

  //     this.commonvalues.businessid(this.commondata);
  //     //  this.commondata.selectedItem=this.navigationMenu[0]

  // }

  // submenu(data){
  //   this.submenuData=data
  // }

  ngAfterViewInit(): void {
    setInterval(() => {
      this.isSuperAdmin = localStorage.getItem("isSuperAdmin");
      this.reqPendinCnt = localStorage.getItem("reqPendinCnt");
    }, 800);
  }

  apicall() {
    this.util.startLoader();
    this.api.query('business/employee/request/pending/'+this.commondata.businessId).subscribe(res=>{
      this.util.stopLoader();
      // this.searchData.setRequestedEmployeeCount(res.length)
      this.reqPendinCnt = localStorage.setItem("reqPendinCnt",res.data.pendingtList.length);

    },err => {
      this.util.stopLoader();
    })
  }

  menuclick(value) {
    // this.selectedItem = data;

    this.commondata.menu = value;
    //  //// console.log('this is menu name')
    //  //// console.log(this.commondata)

    this.apicall();
    if (this.commondata.adminviewnavigation) {
      this.commondata.viewadmin = true;
    }
    this.commonvalues.businessid(this.commondata);

    if (value === "follower") {
      this.follower.followersapicall();
      this.followerRequestFlag = !this.followerRequestFlag;
    }

    if (value === "followerRequestsReceived") {
      this.businesseFollowerRequests.requestlist();
    }

    if (value === "followerRequestsSent") {
      this.businesseFollowerRequestsSent.getVisitorsList();
    }

    if (value === "employee") {
      this.employeeRequestFlag = !this.employeeRequestFlag;
      this.employee.employees();
    }

    if (value === "requestsReceived") {
       this.businesseEmployeeRequests.ngOnInit();
    }

    if (value === "pageadmin") {
      this.adminadd.getAdmins(this.commondata.businessId);
    }

    if (value === "about") {
      this.about.getbussinessId(
        this.commondata.businessId,
        this.commondata.admin
      );
    }

    if (value === "community") {
      this.commonvalues.businessid(this.commondata);
    }

    if (value === "deactivate") {
      this.about.getbussinessId(
        this.commondata.businessId,
        this.commondata.admin
      );
    }
  }

  // submenu(value){
  //   // this. companydetailsapicall();

  //   if(value =='managepages'){
  //     this.communitymembers = true;

  //    }
  // }

  // comMethod(value){

  //   if(this.commondata.adminviewnavigation){
  //     this.commondata.viewadmin=true
  //    }
  //   this.communitymembers = true;
  //   this.commonvalues.businessid(this.commondata);

  // }
}
