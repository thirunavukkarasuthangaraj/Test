import { SearchData } from './../../services/searchData';
import { ApiService } from 'src/app/services/api.service';
import { UtilService } from 'src/app/services/util.service';
import { ActivatedRoute, Router } from '@angular/router';
import { Component, OnInit, Input, ElementRef, ViewChild, EventEmitter, Output } from '@angular/core';
import { FormGroup, FormBuilder } from '@angular/forms';
import { find, get, pull } from 'lodash';
import Swal from 'sweetalert2';

@Component({
  selector: 'app-job-submit-skillfilter',
  templateUrl: './job-submit-skillfilter.component.html',
  styleUrls: ['./job-submit-skillfilter.component.scss']
})
export class JobSubmitSkillfilterComponent implements OnInit {
  @Input() candidateData: any;
  @Input() jobData: any;
  @Input() dataPasstoSkillwidgets: any;
  @Input() widgetDesc: string;
  @ViewChild('tagInput', { static: false }) tagInputRef: ElementRef;
  candidateFilter: boolean = false

  headerTitle: any;
  jobFilter: boolean = false
  user: any = [{ a: 1 }, { a: 2 }, { a: 3 }, { a: 4 }];
  @Input() selectedTags: any[];
  @Output() emitRemoveTag: EventEmitter<any> = new EventEmitter<any>();
  jobfilter = false;
  constructor(private a_route: ActivatedRoute, private searchData: SearchData, private router: Router, private util: UtilService, private api: ApiService, private fb: FormBuilder) {
    this.a_route.queryParams.subscribe((res) => {
      if (res.jobfilter != "undefined" && res.jobfilter != undefined && res.jobfilter == 'true') {
        this.candidateFilter = true;
      }else if (res.candidatefilter != "undefined" && res.candidatefilter != undefined && res.candidatefilter == 'true'){
        this.jobfilter = true
      }
      if (res.master != "NETWORK" && res.master != "TEAM" && res.menu != null && res.menu != undefined) {
        // this.headerTitle = res.menu;
      }
    })
    console.log("this.dataPasstoSkillwidgets")
    console.log(this.dataPasstoSkillwidgets)
  }

  ngOnInit() {
    if(this.candidateFilter == true){
      this.headerTitle = this.candidateData.jobTitle + " " + "(" + this.candidateData.jobId + ")"
    }
     if(this.jobfilter == true){
      this.headerTitle = this.jobData.firstName + " " + this.jobData.lastName + " " + "(" + this.jobData.candidateId + ")"
    }
  }

  /// you can remove user in tag
  removeTag(user) {
    this.emitRemoveTag.emit(user);
  }


  // submit check

  submitJobData(data) {
    console.log(data)
    var submitData = [];
    var tempremovelist = [];
    data.forEach(element => {
      if (element.isSelected) {
        var datavalus = element.candidateId;
        submitData.push({ 'userId': datavalus });
        tempremovelist.push({ 'candidateId': datavalus });
      }
    });

    if (submitData.length != 0) {
      let datas: any = {};
      datas.appliedBy = submitData;
      datas.jobId = this.candidateData.jobId;
      // console.log("ksdfksdjhfksdjh")
      // console.log(datas)
      this.util.startLoader();
      this.api.updatePut("jobs/updateJobApplied", datas).subscribe((res) => {
        if (res) {
          this.util.stopLoader()
          if (res.code == '00000') {
            Swal.fire({
              position: "center",
              icon: "success",
              title: "Candidate(s) submitted successfully.",
              showConfirmButton: false,
              timer: 1500,
            }).then(() => {
              this.searchData.setHighlighter('jobs')
              this.router.navigate(["jobs"]);
            });
            this.emitRemoveTag.emit(tempremovelist);
          }
        }
      }, err => {
        this.util.stopLoader();
      });
    }

  }

  requestResume(value) {
    var data: any = {}
    data.candidateId = this.jobData.candidateId
    data.resumeRequestLogs = []
    value.forEach(element => {
      if (element.isSelected) {
        data.resumeRequestLogs.push({"jobId": element.jobId, "requestedBy": localStorage.getItem('userId')})
      }
    });
    this.util.startLoader()
    this.api.updatePut('candidates/updateResumeRequests', data).subscribe(res=>{
      if(res.code=='00000'){
        this.util.stopLoader()
        Swal.fire({
          position: "center",
          icon: "success",
          title: "Resumes requested successfully.",
          showConfirmButton: false,
          timer: 1500,
        }).then(() => {
          this.searchData.setHighlighter('candidates')
          this.router.navigate(["candidates"]);
        });
      }
    }, err => {
      this.util.stopLoader();
    });
  }


  submitCandidateData(data) {
    console.log(data)
    var submitData = [];
    var tempremovelist = [];
    data.forEach(element => {
      if (element.isSelected) {
        var datavalus = element.jobId;
        submitData.push({ 'userId': datavalus });
        tempremovelist.push({ 'jobId': datavalus });
      }
    });

    if (submitData.length != 0) {
      let datas: any = {};
      datas.appliedBy = submitData;
      datas.jobId = this.candidateData.jobId;
      this.util.startLoader();
      this.api.updatePut("jobs/applyCandidates", datas).subscribe((res) => {
        if (res) {
          this.util.stopLoader()
          if (res.code == '00000') {
            Swal.fire({
              position: "center",
              icon: "success",
              title: "Candidate(s) submitted successfully.",
              showConfirmButton: false,
              timer: 1500,
            }).then(() => {
              this.searchData.setHighlighter('jobs')
              this.router.navigate(["jobs"]);
            });
            this.emitRemoveTag.emit(tempremovelist);
          }
        }
      }, err => {
        this.util.stopLoader();
      });
    }

  }





}
