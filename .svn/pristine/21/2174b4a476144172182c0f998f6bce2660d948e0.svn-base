import { ApiService } from './../../services/api.service';
import { UtilService } from 'src/app/services/util.service';
import { Component, Input, OnInit } from '@angular/core';
import Swal from 'sweetalert2';

@Component({
  selector: 'app-flag',
  templateUrl: './flag.component.html',
  styleUrls: ['./flag.component.scss']
})
export class FlagComponent implements OnInit {

  @Input() type = '';
  @Input() flags: Array<string> = [];
  @Input() id = '';
  @Input() flagTo = '';

  seasons: string[] = ['Winter', 'Spring', 'Summer', 'Autumn'];
  favoriteSeason: string;
  constructor(private util: UtilService, private apiService: ApiService) { }

  ngOnInit(): void {
    // console.log(this.type);
  }

  onClick(f: string) {

    //rest api
    // console.log(this.type);
    // console.log(f);

    if (this.type == "USER") {
      this.type = "UserFeed"
    } else if (this.type == "BUSINESS") {
      this.type = "BusinessFeed"
    }  else if (this.type == "NETWORK") {
      this.type = "NetworkFeed"
    } else if (this.type == "TEAM") {
      this.type = "TeamFeed"
    } else if (this.type == "COMMUNITY") {
      this.type = "CommunityFeed"
    }else if (this.type == "JOB") {
      this.type = "JobFeed"
    }
    else if (this.type == "CANDIDATE") {
      this.type = "CandidateFeed"
    }


    let obj = { flagFrom: localStorage.getItem('userId'), flagTo: this.flagTo, flaggedOnType: this.type, flagContent: f, flagType: f, flagStatus: 'ACTIVE', flaggedOnId: this.id }
    console.log(obj);

    this.util.startLoader();
    this.apiService.create("flag/create", obj).subscribe((res) => {
      this.util.stopLoader();
       if (res.code == "00000") {
         if (this.type == "JobFeed") {
          Swal.fire("Your report has been sent.");
        } else if (this.type == "CandidateFeed") {
          Swal.fire("Your report has been sent.");
        } else {
          Swal.fire("This post has been successfully reported abuse.");
        }
      } else {
        Swal.fire("Reported failed please try again");
      }


    }, err => {
      this.util.stopLoader();
    });
  }

}
