import { FormGroup, FormBuilder } from '@angular/forms';
import { CommonValues } from 'src/app/services/commonValues';
import { Component, OnInit, TemplateRef } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { ApiService } from 'src/app/services/api.service';
import { UtilService } from 'src/app/services/util.service';
import { NgDynamicBreadcrumbService } from 'ng-dynamic-breadcrumb';
import { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';
import { SearchData } from 'src/app/services/searchData';
import { Subscription } from 'rxjs';
 import insureance from './JSON data/insureance.json';


@Component({
  selector: 'app-directory-professional-list',
  templateUrl: './directory-professional-list.component.html',
  styleUrls: ['./directory-professional-list.component.scss']
})
export class DirectoryProfessionalListComponent implements OnInit {
  page: number = 1;
  pagecounts: number;
  hcpSpecalityCode = ''
  hcpType = ''
  userProfile = [];
  doctorSearch = undefined;
  doctorSearcAdd = undefined;
  albhabet = undefined;
  countryCode
  stateCode
  cityData
  modalRef: BsModalRef;
  DataEmitter: Subscription;
  backdropConfig = {
    backdrop: true,
    ignoreBackdropClick: true,
    keyboard: false,
  };

  constructor(private aroute: ActivatedRoute,
    private api: ApiService,
    private router: Router,
    private searchDatas: SearchData,
    private util: UtilService,
    private modalService: BsModalService,
    private BreadcrumbService: NgDynamicBreadcrumbService,
    private fb: FormBuilder) {
      // console.log('List View')
    this.aroute.params.subscribe(res => {
      this.hcpSpecalityCode = res.hcpSpeciality
      if (res.hcptype != 'all') {
        this.hcpType = res.hcptype
      }
      this.countryCode = res.countryId
      this.stateCode = res.stateId
      this.cityData = res.cityId
    });

    this.aroute.queryParams.subscribe((res) => {
      if(res.name != undefined){
        var reload = false;
        var lastAlphabet = this.albhabet;
        this.albhabet = res.name;

        if(lastAlphabet != undefined){
          //reload = false;
          reload = true;
        }

        if(reload){
        // console.log("reloading --> " + this.albhabet);
          this.page = 1;
          this.getProfileList();
        }
      }
    });

    this.DataEmitter = this.searchDatas.getsetSearchDire().subscribe((res) => {
      this.userProfile = res;
    });

  }

  ngOnInit() {
    //console.log('profile init')
    window.scroll({ top: 0, left: 0, behavior: 'smooth' });
    this.getProfileList();
    this.advanceFormdata();
  }



  alhafilter(value) {
    this.albhabet = value;
    this.hcpSpecalityCode = undefined;
    this.getProfileList();
  }

  clear() {
    this.doctorSearch = undefined;
    this.doctorSearcAdd = undefined;
   // this.albhabet = "";
    this.page = 1;
    this.getProfileList();
  }

  pagecount(count) {
    this.page = count;
    this.getProfileList();
  }

  getProfileList() {
    this.util.startLoader()
    let data: any = {}
    if (this.hcpType != '') {
      data.hcpType = this.hcpType;
    }
    data.hcpSpeciality = this.hcpSpecalityCode;
    data.country = this.countryCode;
    data.state = this.stateCode;
    data.city = this.cityData;
    
    //data.gender = this.advanceForm.value.Gender
    data.offset = 1;
    data.limit = 40;
    if (this.page != undefined && this.page != null && this.page != 0) {
      data.offset = this.page;
    }

    if (this.doctorSearch != undefined && this.doctorSearch != "" && this.doctorSearch != null) {
      data.searchText = this.doctorSearch;
    }

    if (this.doctorSearcAdd != undefined && this.doctorSearcAdd != "" && this.doctorSearcAdd != null) {
      data.locationSearch = this.doctorSearcAdd;
    }
    if (this.albhabet != undefined && this.albhabet != null && this.albhabet != "") {
      data.alphabet = this.albhabet;
    }
    this.api.create('healthcare/hcp/profiles', data).subscribe(res => {
     this.util.stopLoader()
      if (res != null) {
        if (res.code == "00000") {
          res.pageCount = res.pageCount * 40;
          this.searchDatas.setSearchDire(res);
          this.userProfile = res;
          //this.albhabet = undefined;
        }

      } else {

      }

    })
  }

  infoEdit(template: TemplateRef<any>) {
    this.modalRef = this.modalService.show(template, this.backdropConfig);
  }

  closeInfoModal() {
    this.modalRef.hide();
    this.advanceForm.reset();
  }

  selectedCar: number;
  DistanceSelect: number;
  SpecialitySelect: any;
  sortBySelected: any;
  InsuranceSelect: any;
  CareRatings: any;
  GenderSelect: any;
  AgeSelect: any;
  ConditionsTreated: any;

  advanceForm: FormGroup;
  Speciality: { name: string }[] = insureance.specilaity
  Insurance: { name: string }[] = insureance.insurence
  Sort: { name: string }[] = insureance.Sort
  Distance: { name: string }[] = insureance.Distance
  patiant: { name: string }[] = insureance.patiant
  Age: { name: string }[] = insureance.Age
  Gender: { name: string }[] = insureance.Gender

  advanceFormdata() {
    this.advanceForm = this.fb.group({
      speciality: [],
      Sort: [],
      Distance: [],
      Insurance: [],
      ConditionsTreated: [],
      CareRatings: [],
      Gender: [],
      Age: [],
      AcceptingNewPatients: [],
      Telehealth: []
    })
  }

  cleardata() {
    this.advanceForm.reset();
  }

  get filterControl() {
    return this.advanceForm.controls;
  }

  getAdvancFilter() {
    let data: any = {};
    data.hcpSpeciality = this.advanceForm.value.speciality
    data.gender = this.advanceForm.value.Gender;
    data.searchText =  this.doctorSearch;
    data.locationSearch =  this.doctorSearcAdd
    data.offset = 1;
    data.limit = 40;
    this.util.startLoader();
    //console.log('data.gender', data.gender)
    this.closeInfoModal();
    this.api.create('healthcare/hcp/profiles', data).subscribe(res => {

      //console.log('getAdvancFilter()', res)
      this.util.stopLoader()

      if (res != null) {
        if (res.code == "00000") {
          res.pageCount = res.pageCount * 40;
          this.searchDatas.setSearchDire(res);
          this.userProfile = res;
          //this.albhabet = undefined;
           this.hcpSpecalityCode=this.advanceForm.value.speciality;
           this.advanceForm.reset();
        }

      } else {

      }

    })
  }

}
