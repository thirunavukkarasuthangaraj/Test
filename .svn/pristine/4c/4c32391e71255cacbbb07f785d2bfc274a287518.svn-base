import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { ApiService } from 'src/app/services/api.service';
import { UtilService } from 'src/app/services/util.service';
import Swal from 'sweetalert2';

@Component({
  selector: 'app-deactivate-business',
  templateUrl: './deactivate-business.component.html',
  styleUrls: ['./deactivate-business.component.scss']
})
export class DeactivateBusinessComponent implements OnInit {

  BusinessData: any;

  constructor(
    private util: UtilService,
    private API: ApiService,
    private router: Router,
  ) { }

  ngOnInit() {
    this.businessupdatedata()
  }


  businessupdatedata() {
    let buserId = localStorage.getItem('businessId');

    this.util.startLoader()
    this.API.query('business/details/' + buserId).subscribe(res => {
      this.util.stopLoader()
      this.BusinessData = res.data.businessModelList[0]
      // console.log('Data', this.BusinessData);
      // Swal.fire('Data', res)
    },err => {
      this.util.stopLoader();
    });

  }

  deactivate() {

    const swalWithBootstrapButtons = Swal.mixin({
      customClass: {
        confirmButton: 'btn btn-success',
        cancelButton: 'btn btn-danger'
      },
      buttonsStyling: false
    })

    swalWithBootstrapButtons.fire({
      title: 'Are you sure you want to deactive?',
      text: "You will still be able to retrieve the business page after deactivation, if you change your mind.",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes',
      cancelButtonText: 'No',
      reverseButtons: true
    }).then((result) => {
      if (result.isConfirmed) {
        this.util.startLoader()
        let deactivateBusinessID = localStorage.getItem('businessId');
        this.API.delete('business/remove/' + deactivateBusinessID).subscribe(res => {
          if (res.code === '00000') {
            this.util.stopLoader()
            this.router.navigate(['landingPage/business'])
            Swal.fire({
              position: 'center',
              icon: 'success',
              title: 'Business page has been deactivated.',
              showConfirmButton: false,
              timer: 1500
            })
          }else{
            this.util.stopLoader()
            Swal.fire({
              position: "center",
              icon: "info",
              title: "Oops..",
              text: "Something went wrong. Please, try again later.",
              showConfirmButton: false,
               timer: 1500,
            })
          }

        },err => {
          this.util.stopLoader();
          if(err.status==500){
          this.util.stopLoader();
          Swal.fire({
            icon: "error",
            title: "Oops...",
            text: 'Something went wrong while processing your request. Please, try again later.',
            showDenyButton: false,
            confirmButtonText: `ok`,
          })
        }
      })

      } else if (result.dismiss === Swal.DismissReason.cancel ) {
        //  Swal.fire({
        //   position: 'center',
        //   icon: 'info',
        //   title: ' Business page is safe',
        //   showConfirmButton: false,
        //   timer: 1500
        // })
      }
    })
  }

}
