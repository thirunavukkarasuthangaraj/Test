import { Component, HostListener, Input, OnInit } from '@angular/core';
import { ApiService } from 'src/app/services/api.service';
import { AppSettings } from 'src/app/services/AppSettings';
import { UtilService } from 'src/app/services/util.service';
import { ProfilePhoto } from 'src/app/services/profilePhoto';
import { User } from 'src/app/types/User';
import { Router } from '@angular/router';
import { CommonValues } from 'src/app/services/commonValues';
import { Subscription } from 'rxjs';

@Component({
  selector: 'app-user-badge',
  templateUrl: './user-badge.component.html',
  styleUrls: ['./user-badge.component.scss']
})
export class UserBadgeComponent implements OnInit {
  @Input('landingPageUserDatails') landingPageUserDatails: any = {};

  @Input() inputData: string;
  show = false;

  contentLoaded: boolean = false;
  otherData: any;
  userId: string;
  date: any;
  name: any;
  home: any;
  studentFlag: boolean;
  schoolName: any;
  img: any = {};
  title: any;
  place: any;
  orgName: any;
  user: User;

  countData: any;
  collapseProfileCompletion = false;

  landingsidesticky1: boolean = false;

  ProfileComplete: any = []
  clickEventsubscription: Subscription;

  constructor(private util: UtilService, private API: ApiService, private commonValues: CommonValues,
     private router: Router,  private profilePhoto: ProfilePhoto) {
      this.clickEventsubscription = commonValues.getUserData().subscribe(res => {
      this.ProfileComplete = res
      localStorage.setItem('currentOrganization', res.organisation)
    })
    this.userId = localStorage.getItem('userId');
  }

  ngOnInit() {
    this.profileStatus();
    this.ProfileComplete = this.commonValues.getUserData();

  }

  @HostListener('window:scroll')
  handleScroll() {
    const windowScroll = window.pageYOffset;
    if (windowScroll >= 24) {
      //console.log("maximize");
      this.landingsidesticky1 = true;
      this.collapseProfileCompletion = true;
    } else {
      this.collapseProfileCompletion = false;
      //console.log("minimize");
      this.landingsidesticky1 = false;
    }
  }


  route(userid) {
    userid = localStorage.getItem('userId')
    if (userid != undefined && userid != null && userid != "") {
      let datas: any = {};
      datas.userId = userid
      this.router.navigate(['personalProfile'], { queryParams: datas });
    }
  }


  profileStatus() {
    let datas: any = {};
    datas.userId = localStorage.getItem('userId')
    this.util.startLoader()
    this.API.query("user/profile/complete/" + localStorage.getItem('userId')).subscribe(res => {
      if(res){
        this.util.stopLoader()
        this.countData = res;
        if (res.photo == undefined || res.photo == null || res.photo == "") {
          res.photo = 'assets/images/userAvatar.png';
        } else {
          res.photo = AppSettings.photoUrl + res.photo;
        }
        this.ProfileComplete = res;
        localStorage.setItem('userName', res.username);
        this.commonValues.setUserData(res);
        if (this.inputData == "PROFILE_CREATE_PAGE" || res.completePercentage == 100) {
          this.show = false;
        } else {
          this.show = true;
        }
      }
    },err => {
      this.util.stopLoader();
    });

  }



  @HostListener("window:resize")
  onResize() {
    if (window.innerHeight == 500 && window.innerWidth == 1093) {
      this.landingsidesticky1 = false;

      // this.csshide=true;
    } else if (window.innerHeight > 500 && window.innerWidth > 1093) {
      this.landingsidesticky1 = false;

      //  this.csshide=true;
    } else if (window.innerHeight < 500 && window.innerWidth < 1093) {
      //this.csshide=false;
    }
  }


}
