import { Injectable, Input } from "@angular/core";
import { Observable, Subject } from "rxjs";
import { Router } from "@angular/router";

@Injectable({
  providedIn: "root",
})
export class SearchData {
  constructor(private router: Router) {}
  adminMode: boolean = false;
  subject = new Subject<any>();
  scroll = new Subject<any>();
  URLLink = new Subject<any>();
  currentOrganizaition = new Subject<any>();
  currentInstitute = new Subject<any>();
  requestedEmployeeCount = new Subject<any>();
  visitorsCount = new Subject<any>();
  searchDirectery = new Subject<any>();
  commonVariables = new Subject<any>();
  notifCount = new Subject<any>();
  inviteSentCount = new Subject<any>();
  highLighter = new Subject<any>();
  teamData = new Subject<any>();
  networkData = new Subject<any>();
  bannerData = new Subject<any>();
  profileBannerData = new Subject<any>();
  menuNameLanding = new Subject<any>();
  sticky = new Subject<any>();

  setSticky(value) {
    this.sticky.next(value);
  }

  getSticky(): Observable<any> {
    return this.sticky.asObservable();
  }

  setCurrentOrg(value) {
    this.currentOrganizaition.next(value);
  }

  getCurrentOrg(): Observable<any> {
    return this.currentOrganizaition.asObservable();
  }

  setRequestedEmployeeCount(value) {
    this.requestedEmployeeCount.next(value);
  }

  getRequestedEmploeeCount(): Observable<any> {
    return this.requestedEmployeeCount.asObservable();
  }

  setVisitorsCount(value) {
    this.visitorsCount.next(value);
  }

  getVisitorsCount(): Observable<any> {
    return this.visitorsCount.asObservable();
  }

  setCommonVariables(value) {
    this.commonVariables.next(value);
  }

  getCommonVariables(): Observable<any> {
    return this.commonVariables.asObservable();
  }

  setNotificationCount(value) {
    this.notifCount.next(value);
  }

  getNotificationCount(): Observable<any> {
    return this.notifCount.asObservable();
  }

  setInviteSentCount(value) {
    this.inviteSentCount.next(value);
  }

  getInviteSentount(): Observable<any> {
    return this.inviteSentCount.asObservable();
  }

  setHighlighter(value) {
    this.highLighter.next(value);
  }

  getHighlighter(): Observable<any> {
    return this.highLighter.asObservable();
  }

  setCurrentInst(value) {
    this.currentInstitute.next(value);
  }

  getCurrentInst(): Observable<any> {
    return this.currentInstitute.asObservable();
  }

  setBooleanValue(value) {
    this.subject.next(value);
  }

  getBooleanValue(): Observable<any> {
    return this.subject.asObservable();
  }

  setSearchData(value) {
    this.subject.next(value);
  }

  getSearchData(): Observable<any> {
    return this.subject.asObservable();
  }

  setHeadQuarters(value) {
    this.subject.next(value);
  }

  getHeadQuarters(): Observable<any> {
    return this.subject.asObservable();
  }

  setSearchDire(value) {
    this.searchDirectery.next(value);
  }

  getsetSearchDire(): Observable<any> {
    return this.searchDirectery.asObservable();
  }

  setTeamdata(value) {
    this.teamData.next(value);
  }

   setNetdata(value) {
    this.networkData.next(value);
  }
  getNetdata(): Observable<any> {
    return this.networkData.asObservable();
  }
  setnetpathdata(value) {
    this.networkData.next(value);
  }
  getTeamdata(): Observable<any> {
    return this.teamData.asObservable();
  }

  setBannerPhoto(value) {
    this.bannerData.next(value);
  }

  getBannerPhoto(): Observable<any> {
    return this.bannerData.asObservable();
  }  

  setProfileBannerPhoto(value) {
    this.profileBannerData.next(value);
  }

  getProfileBannerPhoto(): Observable<any> {
    return this.profileBannerData.asObservable();
  }  

  setScroll(value) {
    this.scroll.next(value);
  }

  getScroll(): Observable<any> {
    return this.scroll.asObservable();
  }

  setWebLinkURL(value) {
    this.URLLink.next(value);
  }

  getWebLinkURL(): Observable<any> {
    return this.URLLink.asObservable();
  }


  redirect(data, path) {
    setTimeout(() => {
      this.router.navigate([path], { queryParams: data, replaceUrl: true });
    }, 400);
  }
}
